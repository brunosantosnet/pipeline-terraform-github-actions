name: Staging
on:
  pull_request:
    branches:
      - staging
jobs:
  Preparacao:
    name: An√°lise de vulnerabilidades e custos
    runs-on: ubuntu-latest
    environment: STG
    defaults:
      run:
        working-directory: ${{ github.workspace }}/deployment/terraform
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.10
          terraform_wrapper: false
      - name: aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: terraform init
        id: init
        run: terraform init
      - name: terraform workspace
        run: terraform workspace select stg
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: terraform security scan
        uses: aquasecurity/tfsec-pr-commenter-action@main
        with:
          github_token: ${{ github.token }}
          #working_directory: ${{ github.workspace }}/deployment/terraform
      - name: terraform plan
        id: plan
        run: terraform plan -var-file=environments/stg.tfvars -out=tfplan.json -no-color
      - name: resume
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
